# Generated by Django 3.1.4 on 2020-12-19 15:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import registration.models.applicant
import registration.models.evaluation
import registration.models.user_model


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('full_name', models.CharField(max_length=150)),
                ('userName', models.CharField(max_length=50)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('Phone', models.CharField(max_length=50)),
                ('role', models.PositiveIntegerField(choices=[(1, 'Register Student'), (2, 'Admission Department'), (3, 'English Department'), (4, 'Scholarships Department'), (5, 'Supervisor Department'), (6, 'Register Dean'), (7, 'Pharmacy Dean'), (8, 'Communication Department'), (9, 'Medicine Dean'), (10, 'Science Dean'), (11, 'Register Review'), (12, 'English Confirmer'), (90, 'Super Admin')])),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('signature', models.ImageField(blank=True, null=True, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', registration.models.user_model.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_no', models.IntegerField(unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('full_name', models.CharField(max_length=100)),
                ('family_name', models.CharField(max_length=50)),
                ('arabic_first_name', models.CharField(max_length=50)),
                ('arabic_middle_name', models.CharField(max_length=50)),
                ('arabic_last_name', models.CharField(max_length=50)),
                ('arabic_full_name', models.CharField(max_length=100)),
                ('arabic_family_name', models.CharField(max_length=50)),
                ('superior_name', models.CharField(max_length=100)),
                ('superior_arabic_name', models.CharField(blank=True, max_length=100, null=True)),
                ('superior_nationalID', models.CharField(max_length=100)),
                ('superior_relation', models.CharField(max_length=100)),
                ('superior_phone', models.CharField(max_length=100)),
                ('emergency_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_relation', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_nationalID', models.CharField(blank=True, max_length=100, null=True)),
                ('home_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='Password')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('F', 'Female'), ('M', 'Male')], max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('birth_place', models.CharField(max_length=50)),
                ('birth_date', models.DateField(blank=True, max_length=20, null=True)),
                ('birth_date_hegry', models.DateField(blank=True, max_length=20, null=True)),
                ('employment_state', models.CharField(max_length=50)),
                ('employer', models.SmallIntegerField(blank=True, choices=[(1, 'Government'), (2, 'Private')], null=True)),
                ('first_questionare', models.CharField(max_length=10)),
                ('second_questionare', models.CharField(max_length=10)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('building_no', models.CharField(blank=True, max_length=20, null=True)),
                ('street_no', models.CharField(blank=True, max_length=20, null=True)),
                ('district', models.CharField(blank=True, max_length=20, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('extra_code', models.CharField(blank=True, max_length=20, null=True)),
                ('certificate_country', models.CharField(max_length=50)),
                ('education_area', models.CharField(blank=True, max_length=50, null=True)),
                ('high_school_city', models.CharField(blank=True, max_length=30, null=True)),
                ('high_school_GPA', models.FloatField(blank=True, null=True)),
                ('high_school_year', models.IntegerField(blank=True, null=True)),
                ('equation', models.FloatField(blank=True, null=True)),
                ('high_school_name', models.CharField(blank=True, max_length=500, null=True)),
                ('qiyas_aptitude', models.FloatField(blank=True, null=True)),
                ('qiyas_achievement', models.FloatField(blank=True, null=True)),
                ('secondary_type', models.CharField(max_length=20)),
                ('tagseer_institute', models.CharField(blank=True, max_length=500, null=True)),
                ('tagseer_department', models.SmallIntegerField(blank=True, null=True)),
                ('tagseer_GPA', models.FloatField(blank=True, null=True)),
                ('tagseer_year', models.CharField(blank=True, max_length=50, null=True)),
                ('tagseer_number', models.CharField(blank=True, max_length=500, null=True)),
                ('tagseer_date', models.DateField(blank=True, null=True)),
                ('tagseer_country', models.CharField(blank=True, max_length=50, null=True)),
                ('health_state', models.CharField(max_length=50)),
                ('health_type', models.CharField(blank=True, max_length=50, null=True)),
                ('init_state', models.CharField(blank=True, choices=[('UR', 'Under Review'), ('IA', 'Initial Acceptance'), ('CA', 'Conditional Acceptance'), ('RJ', 'Rejected')], max_length=50, null=True)),
                ('final_state', models.CharField(blank=True, choices=[('A', 'Accepted'), ('RJ', 'Rejected'), ('RJM', 'Rejected In Major'), ('W', 'Put On waiting')], max_length=50, null=True)),
                ('init_state_date', models.DateTimeField(blank=True, null=True)),
                ('registration_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('apply_semester', models.CharField(blank=True, max_length=50, null=True)),
                ('last_semester', models.CharField(blank=True, max_length=50, null=True)),
                ('applicant_type', models.CharField(blank=True, choices=[('FS', 'Fresh Student'), ('TS', 'Transferred Student'), ('HD', 'Health Diploma Student')], max_length=50, null=True)),
                ('condition', models.TextField(blank=True, max_length=1000, null=True)),
                ('offer', models.CharField(blank=True, choices=[('AC', 'Accepted'), ('RJ', 'Rejected')], max_length=10, null=True)),
                ('contacted', models.BooleanField(default=False)),
                ('accepted_outside', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, max_length=1000, null=True)),
                ('pledge', models.BooleanField(blank=True, null=True)),
                ('high_graduation_year', models.IntegerField(blank=True, null=True)),
                ('previous_GPA', models.FloatField(blank=True, null=True)),
                ('previous_university', models.CharField(blank=True, max_length=500, null=True)),
                ('max_gpa', models.FloatField(blank=True, null=True)),
                ('state_university', models.CharField(blank=True, choices=[('RE', 'Regular'), ('OU', 'Outgoing'), ('AP', 'Apologize'), ('PP', 'Postponed'), ('AS', 'Academically_separated'), ('DD', 'Disciplinary_disconnected'), ('FR', 'Folded_registration')], max_length=10, null=True)),
                ('english_certf_score', models.FloatField(default=0)),
                ('english_certf_result', models.CharField(blank=True, choices=[('S', 'Succeeded'), ('F', 'Failed'), ('L', 'Low Score'), ('U', 'Unkown Certificate')], max_length=3, null=True)),
                ('modify_grader', models.DateTimeField(blank=True, null=True)),
                ('english_certf_confirmation', models.BooleanField(blank=True, null=True)),
                ('university_english_certification', models.FileField(blank=True, null=True, upload_to=registration.models.applicant.get_filename)),
                ('nationality', models.CharField(max_length=20)),
                ('mother_nationality', models.CharField(max_length=50)),
                ('national_id', models.CharField(max_length=100)),
                ('first_periority', models.IntegerField(blank=True, null=True)),
                ('second_periority', models.IntegerField(blank=True, null=True)),
                ('third_periority', models.IntegerField(blank=True, null=True)),
                ('fourth_periority', models.IntegerField(blank=True, null=True)),
                ('fifth_periority', models.IntegerField(blank=True, null=True)),
                ('sixth_periority', models.IntegerField(blank=True, null=True)),
                ('seventh_periority', models.IntegerField(blank=True, null=True)),
                ('eightth_periority', models.IntegerField(blank=True, null=True)),
                ('nineth_periority', models.IntegerField(blank=True, null=True)),
                ('tenth_periority', models.IntegerField(blank=True, null=True)),
                ('student_id', models.CharField(blank=True, max_length=50, null=True)),
                ('marital_status', models.SmallIntegerField(blank=True, choices=[(1, 'Single'), (2, 'Married'), (3, 'Divorced'), (4, 'Widowed')], null=True)),
                ('english_grader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_no', models.IntegerField(blank=True, null=True)),
                ('city_no', models.IntegerField(blank=True, null=True)),
                ('city_name_arabic', models.CharField(blank=True, max_length=300, null=True)),
                ('city_name_englsih', models.CharField(blank=True, max_length=300, null=True)),
                ('zone_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_no', models.IntegerField(blank=True, null=True)),
                ('country_name_arabic', models.CharField(blank=True, max_length=300, null=True)),
                ('country_name_english', models.CharField(blank=True, max_length=300, null=True)),
                ('nationality_english', models.CharField(blank=True, max_length=300, null=True)),
                ('nationality_arabic', models.CharField(blank=True, max_length=300, null=True)),
                ('category_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('M', 'Medicine'), ('PH', 'Pharmacy'), ('AS', 'Applied Science'), ('NF', 'No Faculty')], max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_type', models.PositiveSmallIntegerField(choices=[(1, 'User'), (2, 'Applicant')])),
                ('sender', models.PositiveIntegerField()),
                ('receiver_type', models.PositiveIntegerField(choices=[(1, 'User'), (2, 'Applicant')])),
                ('receiver', models.PositiveIntegerField()),
                ('seen', models.BooleanField(default=False)),
                ('delivered', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='OracleProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant_id', models.IntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('national_id', models.CharField(max_length=100)),
                ('process', models.SmallIntegerField(choices=[(1, 'add_applicant'), (2, 'update_applicant'), (3, 'update_score'), (4, 'add_major'), (5, 'update_major')])),
                ('send', models.BooleanField(default=False)),
                ('send_date', models.DateTimeField(blank=True, null=True)),
                ('delivered', models.BooleanField(default=False)),
                ('delivered_date', models.DateTimeField(blank=True, null=True)),
                ('number_tries', models.SmallIntegerField(default=0)),
                ('error_reason', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.IntegerField()),
                ('descripton', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_no', models.IntegerField(blank=True, null=True)),
                ('school_name_arabic', models.CharField(blank=True, max_length=300, null=True)),
                ('school_name_english', models.CharField(blank=True, max_length=300, null=True)),
                ('country_no', models.IntegerField(blank=True, null=True)),
                ('city_no', models.IntegerField(blank=True, null=True)),
                ('school_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'school',
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('role', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('modified_to', models.CharField(max_length=150)),
                ('date_modified', models.DateTimeField()),
                ('modified_in', models.TextField()),
                ('before_modified', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_code', models.IntegerField(blank=True, null=True)),
                ('university_name_english', models.CharField(blank=True, max_length=300, null=True)),
                ('university_name_arabic', models.CharField(blank=True, max_length=300, null=True)),
                ('country_code', models.IntegerField(blank=True, null=True)),
                ('university_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'university',
            },
        ),
        migrations.CreateModel(
            name='UnivPayments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_title', models.CharField(choices=[('ERET', 'english_retest'), ('REG', 'registration_fees')], max_length=10, unique=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_type', models.CharField(choices=[('1', 'English'), ('2', 'Interview')], max_length=1)),
                ('capacity', models.IntegerField(default=1)),
                ('count', models.IntegerField(default=0)),
                ('reservation_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('duration_time', models.IntegerField(default=1)),
                ('reserved', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-reservation_date',),
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(default=False)),
                ('checkout_id', models.CharField(max_length=300)),
                ('entity_id', models.CharField(blank=True, max_length=300, null=True)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('transaction_id', models.CharField(blank=True, max_length=300, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('card_number', models.CharField(blank=True, max_length=50, null=True)),
                ('authorization_code', models.CharField(blank=True, max_length=50, null=True)),
                ('clearing_institute_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ipCountry', models.CharField(blank=True, max_length=50, null=True)),
                ('ipAddr', models.CharField(blank=True, max_length=50, null=True)),
                ('applicant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.applicant')),
                ('payment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.univpayments')),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('MS', 'Medicine & Surgery'), ('PHD', 'Pharm D'), ('NU', 'Nursing'), ('RT', 'Respiratory Therapy'), ('EMS', 'Emergency Medical Services'), ('AT', 'Anaesthesia Technology'), ('HIS', 'Health Information Systems'), ('IS', 'Information Systems'), ('CS', 'Computer Science'), ('IE', 'Industrial Engineering'), ('GSE', 'General science & English'), ('NM', 'No Major')], max_length=10, unique=True)),
                ('status', models.BooleanField(default=True)),
                ('action_date', models.DateTimeField(blank=True, null=True)),
                ('faculty_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculties', to='registration.faculty')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('outlook', models.CharField(blank=True, max_length=100, null=True)),
                ('personality', models.CharField(blank=True, max_length=100, null=True)),
                ('interest', models.CharField(blank=True, max_length=100, null=True)),
                ('knowledge', models.CharField(blank=True, max_length=100, null=True)),
                ('fitness', models.CharField(blank=True, max_length=100, null=True)),
                ('english', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('result', models.CharField(blank=True, choices=[('S', 'Succeeded'), ('F', 'Failed'), ('P', 'Postponed'), ('A', 'Absent'), ('L', 'Low Score'), ('U', 'Unkown Certificate')], max_length=50, null=True)),
                ('university_certificate', models.FileField(blank=True, null=True, upload_to=registration.models.evaluation.get_image_filename)),
                ('applicant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.applicant')),
                ('reservation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.reservation')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('admin', models.SmallIntegerField(choices=[(1, 'Admission'), (2, 'English Test'), (3, 'Interview'), (4, 'Dean')])),
                ('is_open', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.applicant')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.ManyToManyField(related_name='user_group_chat', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modify_user', models.DateTimeField(blank=True, null=True)),
                ('file_name', models.CharField(max_length=50)),
                ('url', models.FileField(upload_to=registration.models.applicant.get_image_filename)),
                ('status', models.CharField(blank=True, choices=[('A', 'Accepted'), ('RJ', 'Rejected')], max_length=10, null=True)),
                ('rej_reason', models.TextField(blank=True, null=True)),
                ('applicant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicants', to='registration.applicant')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EnglishTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modify_user', models.DateTimeField(blank=True, null=True)),
                ('test_type', models.CharField(blank=True, choices=[('T', 'TOEFL'), ('I', 'ILETS'), ('OX', 'Oxford'), ('S', 'Step')], max_length=50, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('result', models.CharField(blank=True, choices=[('S', 'Succeeded'), ('F', 'Failed'), ('P', 'Postponed'), ('A', 'Absent'), ('L', 'Low Score'), ('U', 'Unkown Certificate')], max_length=50, null=True)),
                ('test_try', models.SmallIntegerField(choices=[(1, 'first_test'), (2, 'second_test')])),
                ('original_certificate', models.FileField(blank=True, null=True, upload_to=registration.models.evaluation.get_image_filename)),
                ('university_certificate', models.FileField(blank=True, null=True, upload_to=registration.models.evaluation.get_image_filename)),
                ('confirmed', models.BooleanField(blank=True, null=True)),
                ('applicant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.applicant')),
                ('reservation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.reservation')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_open', models.BooleanField(default=True)),
                ('expire_date', models.DateTimeField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicant_conversation', to='registration.applicant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_conversation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='applicant',
            name='major_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='registration.major'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='modified_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modify_applicant', to=settings.AUTH_USER_MODEL),
        ),
    ]

